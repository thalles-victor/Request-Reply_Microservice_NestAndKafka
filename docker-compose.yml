version: "3"
services:
  api_gateway:
    container_name: api_gateway_conatiner
    build:
      context: ./api_gateway
      dockerfile: dockerfile
    volumes:
      - "./api_gateway:/app"
    networks:
      - yt-microservice-lesson
    ports:
      - 3000:3000

  user_ms:
    container_name: user_ms_container
    build:
      context: "./microservices/user"
      dockerfile: dockerfile
    volumes:
      - ./microservices/user:/app
    networks:
      - yt-microservice-lesson
    depends_on:
      - kafka

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - yt-microservice-lesson
    
  kafka:
    container_name: kafka_service
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_service:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - yt-microservice-lesson

  kafka_manager:
    container_name: kafka_manager
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
     - KAFKA_CLUSTERS_0_NAME=local
     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_service:9092
    networks:
      - yt-microservice-lesson

  

networks:
  yt-microservice-lesson:
    driver: bridge